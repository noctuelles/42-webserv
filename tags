!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/mnt/nfs/homes/tpouget/42-webserv/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(NAME)	Makefile	/^$(NAME):		$(OBJ\/OBJECTS)$/;"	t
0	compile_commands.json	/^   "c++",$/;"	s	array:0.arguments
0	compile_commands.json	/^   "c++",$/;"	s	array:1.arguments
0	compile_commands.json	/^ {$/;"	o
1	compile_commands.json	/^   "-MMD",$/;"	s	array:0.arguments
1	compile_commands.json	/^   "-MMD",$/;"	s	array:1.arguments
1	compile_commands.json	/^ {$/;"	o
10	compile_commands.json	/^   "obj\/ServerSocket.o"$/;"	s	array:1.arguments
10	compile_commands.json	/^   "obj\/main.o"$/;"	s	array:0.arguments
2	compile_commands.json	/^   "-Wall",$/;"	s	array:0.arguments
2	compile_commands.json	/^   "-Wall",$/;"	s	array:1.arguments
3	compile_commands.json	/^   "-Wextra",$/;"	s	array:0.arguments
3	compile_commands.json	/^   "-Wextra",$/;"	s	array:1.arguments
4	compile_commands.json	/^   "-std=c++98",$/;"	s	array:0.arguments
4	compile_commands.json	/^   "-std=c++98",$/;"	s	array:1.arguments
5	compile_commands.json	/^   "-g3",$/;"	s	array:0.arguments
5	compile_commands.json	/^   "-g3",$/;"	s	array:1.arguments
6	compile_commands.json	/^   "-pedantic-errors",$/;"	s	array:0.arguments
6	compile_commands.json	/^   "-pedantic-errors",$/;"	s	array:1.arguments
7	compile_commands.json	/^   "-c",$/;"	s	array:0.arguments
7	compile_commands.json	/^   "-c",$/;"	s	array:1.arguments
8	compile_commands.json	/^   "ServerSocket.cpp",$/;"	s	array:1.arguments
8	compile_commands.json	/^   "main.cpp",$/;"	s	array:0.arguments
9	compile_commands.json	/^   "-o",$/;"	s	array:0.arguments
9	compile_commands.json	/^   "-o",$/;"	s	array:1.arguments
BUFFSIZE	main.cpp	/^# define BUFFSIZE /;"	d	file:
CPPFLAGS	Makefile	/^CPPFLAGS		= ${INCLUDE_FLAGS} -MMD$/;"	m
CXX	Makefile	/^CXX				= clang++-14 -gdwarf-4$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS		= -Wall -Wextra -std=c++98 -g3 -pedantic-errors #-Werror $/;"	m
INCLUDE_FLAGS	Makefile	/^INCLUDE_FLAGS	= $/;"	m
InternetSocket	SocketTypes.hpp	/^typedef SimpleSocket<struct sockaddr_in>	InternetSocket;$/;"	t	typeref:typename:SimpleSocket<struct sockaddr_in>
LDFLAGS	Makefile	/^LDFLAGS			=$/;"	m
LDLIBS	Makefile	/^LDLIBS			=$/;"	m
NAME	Makefile	/^NAME			= webserv$/;"	m
OBJ/DEPS	Makefile	/^OBJ\/DEPS		= $(patsubst	%.o,    %.d,		$(OBJ\/OBJECTS))$/;"	m
OBJ/OBJECTS	Makefile	/^OBJ\/OBJECTS		= $(patsubst	%.cpp,  obj\/%.o,	$(SOURCES))$/;"	m
SERVERSOCKET_HPP	ServerSocket.hpp	/^# define SERVERSOCKET_HPP$/;"	d
SIMPLESOCKET_HPP	SimpleSocket.hpp	/^# define SIMPLESOCKET_HPP$/;"	d
SOCKETTYPES_HPP	SocketTypes.hpp	/^# define SOCKETTYPES_HPP$/;"	d
SOURCES	Makefile	/^SOURCES			= $(wildcard *.cpp)$/;"	m
ServerSocket	ServerSocket.cpp	/^ServerSocket::ServerSocket()$/;"	f	class:ServerSocket
ServerSocket	ServerSocket.hpp	/^class ServerSocket : public InternetSocket \/\/ see SocketTypes.hpp$/;"	c
SimpleSocket	SimpleSocket.hpp	/^			SimpleSocket()$/;"	f	class:SimpleSocket
SimpleSocket	SimpleSocket.hpp	/^			SimpleSocket(int domain, int type, int protocol)$/;"	f	class:SimpleSocket
SimpleSocket	SimpleSocket.hpp	/^	class SimpleSocket$/;"	c
_M_fd	SimpleSocket.hpp	/^			int			_M_fd;$/;"	m	class:SimpleSocket	typeref:typename:int
_M_len	SimpleSocket.hpp	/^			socklen_t	_M_len;$/;"	m	class:SimpleSocket	typeref:typename:socklen_t
_M_sockaddr	SimpleSocket.hpp	/^			T			_M_sockaddr;$/;"	m	class:SimpleSocket	typeref:typename:T
accept	ServerSocket.cpp	/^bool	ServerSocket::accept(InternetSocket& csock)$/;"	f	class:ServerSocket	typeref:typename:bool
all	Makefile	/^all:			$(NAME)$/;"	t
arguments	compile_commands.json	/^  "arguments": [$/;"	a	object:0
arguments	compile_commands.json	/^  "arguments": [$/;"	a	object:1
bind	ServerSocket.cpp	/^void	ServerSocket::bind(in_addr_t addr, in_port_t port)$/;"	f	class:ServerSocket	typeref:typename:void
clean	Makefile	/^clean:$/;"	t
directory	compile_commands.json	/^  "directory": "\/mnt\/nfs\/homes\/tpouget\/42-webserv",$/;"	s	object:0
directory	compile_commands.json	/^  "directory": "\/mnt\/nfs\/homes\/tpouget\/42-webserv",$/;"	s	object:1
fclean	Makefile	/^fclean:			clean$/;"	t
file	compile_commands.json	/^  "file": "ServerSocket.cpp"$/;"	s	object:1
file	compile_commands.json	/^  "file": "main.cpp"$/;"	s	object:0
getFd	SimpleSocket.hpp	/^			int	getFd() const$/;"	f	class:SimpleSocket	typeref:typename:int
getFdFlags	SimpleSocket.hpp	/^			int	getFdFlags() const$/;"	f	class:SimpleSocket	typeref:typename:int
getSockAddr	SimpleSocket.hpp	/^			T&	getSockAddr()$/;"	f	class:SimpleSocket	typeref:typename:T &
getSockLen	SimpleSocket.hpp	/^			socklen_t&	getSockLen()$/;"	f	class:SimpleSocket	typeref:typename:socklen_t &
getSockOpt	SimpleSocket.hpp	/^			void	getSockOpt(int optname, void* optval, socklen_t* optlen) const$/;"	f	class:SimpleSocket	typeref:typename:void
isBlocking	SimpleSocket.hpp	/^			bool	isBlocking() const$/;"	f	class:SimpleSocket	typeref:typename:bool
listen	ServerSocket.cpp	/^void	ServerSocket::listen(int backlog)$/;"	f	class:ServerSocket	typeref:typename:void
main	main.cpp	/^int main()$/;"	f	typeref:typename:int
obj	Makefile	/^obj:$/;"	t
obj/%.o	Makefile	/^obj\/%.o:		%.cpp Makefile | obj$/;"	t
re	Makefile	/^re:				fclean all$/;"	t
setBlockingMode	SimpleSocket.hpp	/^			void	setBlockingMode(bool blocking) const$/;"	f	class:SimpleSocket	typeref:typename:void
setFd	SimpleSocket.hpp	/^			void	setFd(int fd)$/;"	f	class:SimpleSocket	typeref:typename:void
setFdFlags	SimpleSocket.hpp	/^			void	setFdFlags(int fl) const$/;"	f	class:SimpleSocket	typeref:typename:void
setReusableMode	SimpleSocket.hpp	/^			void	setReusableMode(bool	reusable) const$/;"	f	class:SimpleSocket	typeref:typename:void
setSockOpt	SimpleSocket.hpp	/^			void	setSockOpt(int optname, void *optval, socklen_t optlen) const$/;"	f	class:SimpleSocket	typeref:typename:void
~ServerSocket	ServerSocket.cpp	/^ServerSocket::~ServerSocket()$/;"	f	class:ServerSocket
~SimpleSocket	SimpleSocket.hpp	/^			virtual ~SimpleSocket()$/;"	f	class:SimpleSocket
